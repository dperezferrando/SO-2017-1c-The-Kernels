==10014== Memcheck, a memory error detector
==10014== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==10014== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==10014== Command: ./CPU
==10014== Parent PID: 2722
==10014== 
==10014== Conditional jump or move depends on uninitialised value(s)
==10014==    at 0x4104FEF: vfprintf (vfprintf.c:1661)
==10014==    by 0x410A2AE: printf (printf.c:33)
==10014==    by 0x804A8BF: main (CPU.c:26)
==10014== 
==10014== Conditional jump or move depends on uninitialised value(s)
==10014==    at 0x402D417: __GI_strlen (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==10014==    by 0x41382DC: strdup (strdup.c:41)
==10014==    by 0x409C471: analizadorLinea (in /usr/lib/libparser-ansisop.so)
==10014==    by 0x804A8DA: main (CPU.c:27)
==10014== 
==10014== Conditional jump or move depends on uninitialised value(s)
==10014==    at 0x402D3F7: strlen (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==10014==    by 0x409CE79: _string_trim (in /usr/lib/libparser-ansisop.so)
==10014==    by 0x409C485: analizadorLinea (in /usr/lib/libparser-ansisop.so)
==10014==    by 0x804A8DA: main (CPU.c:27)
==10014== 
==10014== Syscall param socketcall.send(msg) points to uninitialised byte(s)
==10014==    at 0x40AF281: send (socket.S:63)
==10014==    by 0x804A6C3: internalSend (SocketLibrary.c:275)
==10014==    by 0x804A004: lSend (SocketLibrary.c:129)
==10014==    by 0x804B767: enviarPedidoEscrituraMemoria (CPU.c:335)
==10014==    by 0x804B67A: escribirEnMemoria (CPU.c:318)
==10014==    by 0x804B10D: asignar (CPU.c:180)
==10014==    by 0x409C5D2: analizadorLinea (in /usr/lib/libparser-ansisop.so)
==10014==    by 0x804A8DA: main (CPU.c:27)
==10014==  Address 0x4271e55 is 21 bytes inside a block of size 24 alloc'd
==10014==    at 0x402A17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==10014==    by 0x8049FB8: lSend (SocketLibrary.c:125)
==10014==    by 0x804B767: enviarPedidoEscrituraMemoria (CPU.c:335)
==10014==    by 0x804B67A: escribirEnMemoria (CPU.c:318)
==10014==    by 0x804B10D: asignar (CPU.c:180)
==10014==    by 0x409C5D2: analizadorLinea (in /usr/lib/libparser-ansisop.so)
==10014==    by 0x804A8DA: main (CPU.c:27)
==10014== 
==10014== Syscall param socketcall.send(msg) points to uninitialised byte(s)
==10014==    at 0x40AF281: send (socket.S:63)
==10014==    by 0x804A6C3: internalSend (SocketLibrary.c:275)
==10014==    by 0x804A004: lSend (SocketLibrary.c:129)
==10014==    by 0x804A937: main (CPU.c:32)
==10014==  Address 0x4274019 is 409 bytes inside a block of size 413 alloc'd
==10014==    at 0x402A17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==10014==    by 0x8049FB8: lSend (SocketLibrary.c:125)
==10014==    by 0x804A937: main (CPU.c:32)
==10014== 
==10014== 
==10014== HEAP SUMMARY:
==10014==     in use at exit: 954 bytes in 40 blocks
==10014==   total heap usage: 359 allocs, 319 frees, 6,458 bytes allocated
==10014== 
==10014== LEAK SUMMARY:
==10014==    definitely lost: 661 bytes in 11 blocks
==10014==    indirectly lost: 293 bytes in 29 blocks
==10014==      possibly lost: 0 bytes in 0 blocks
==10014==    still reachable: 0 bytes in 0 blocks
==10014==         suppressed: 0 bytes in 0 blocks
==10014== Rerun with --leak-check=full to see details of leaked memory
==10014== 
==10014== For counts of detected and suppressed errors, rerun with: -v
==10014== Use --track-origins=yes to see where uninitialised values come from
==10014== ERROR SUMMARY: 15 errors from 5 contexts (suppressed: 0 from 0)
