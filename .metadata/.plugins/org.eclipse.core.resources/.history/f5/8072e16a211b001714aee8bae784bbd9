#include "Listen.h"

void handler(){
	socketHandler* sHandlerMaster;
	//socketHandler sHandlerControl;
	socketHandler* sHandlerResult;
	int listener= getBindedSocket(LOCALHOST,PUERTO);
	lListen(listener,BACKLOG);
	addReadSocket(listener,sHandlerMaster);
	void* msg;
	while(1){
		puts("Entro al while 1");

		int newSocket= lAccept(listener);
		lRecv(newSocket,msg);
		//lRecv(newSocket,msg);
		printf("%s",((char*)msg));
	}
}

/*void lRecv2(int reciever, char a[]){
	a=malloc(sizeof(Header));
		internalRecv2(reciever,a,sizeof(Header));
}

void internalRecv2(int reciever, char buf[], int size){
	int status;
	printf("%d",status= recv(reciever,buf,size,0));
	errorIfEqual(status,0,"Connection Closed");
}*/



//sHandlerResult= lSelect(sHandlerMaster,2);
		//handleResults(listener,listener2,sHandlerMaster,sHandlerResult);
		/*struct sockaddr_storage* addr;
		int size= sizeof(struct sockaddr);
		int newSocket= accept(listener,&addr,&(size));
		recv(newSocket,msg,5*sizeof(char),0);

		buf=malloc(5*sizeof(char));
		internalRecv(reciever,buf,5*sizeof(char));

		printf("%s",msg);
		*/
