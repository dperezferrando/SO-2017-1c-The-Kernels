==10064== Memcheck, a memory error detector
==10064== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==10064== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==10064== Command: ./Kernel
==10064== Parent PID: 2860
==10064== 
==10064== Syscall param socketcall.send(msg) points to uninitialised byte(s)
==10064==    at 0x40722A8: send (socket.S:98)
==10064==    by 0x80521F0: internalSend (SocketLibrary.c:275)
==10064==    by 0x8051B31: lSend (SocketLibrary.c:129)
==10064==    by 0x8050FCC: executeProcess (Process.c:134)
==10064==    by 0x804EC6C: recibirDeCPU (ConnectionCore.c:493)
==10064==    by 0x804D8DD: handleSockets (ConnectionCore.c:27)
==10064==    by 0x80507A3: handler (Listen.c:17)
==10064==    by 0x8050200: main (Kernel.c:47)
==10064==  Address 0x4284c75 is 101 bytes inside a block of size 105 alloc'd
==10064==    at 0x402A17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==10064==    by 0x8051AE5: lSend (SocketLibrary.c:125)
==10064==    by 0x8050FCC: executeProcess (Process.c:134)
==10064==    by 0x804EC6C: recibirDeCPU (ConnectionCore.c:493)
==10064==    by 0x804D8DD: handleSockets (ConnectionCore.c:27)
==10064==    by 0x80507A3: handler (Listen.c:17)
==10064==    by 0x8050200: main (Kernel.c:47)
==10064==  Uninitialised value was created by a heap allocation
==10064==    at 0x402A17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==10064==    by 0x804CB32: deserializarPCB (Configuration.c:54)
==10064==    by 0x804F46D: recibirPCB (ConnectionCore.c:713)
==10064==    by 0x804EC2D: recibirDeCPU (ConnectionCore.c:488)
==10064==    by 0x804D8DD: handleSockets (ConnectionCore.c:27)
==10064==    by 0x80507A3: handler (Listen.c:17)
==10064==    by 0x8050200: main (Kernel.c:47)
==10064== 
==10064== 
==10064== HEAP SUMMARY:
==10064==     in use at exit: 0 bytes in 0 blocks
==10064==   total heap usage: 503 allocs, 503 frees, 11,933 bytes allocated
==10064== 
==10064== All heap blocks were freed -- no leaks are possible
==10064== 
==10064== For counts of detected and suppressed errors, rerun with: -v
==10064== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)
